// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
	const { Sequelize } = sequelize;
	// This section contains the fields of your model, mapped to your table's columns.
	// Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
	const Label = sequelize.define(
		"label",
		{
			id: {
				type: DataTypes.INTEGER,
				primaryKey: true,
				allowNull: false,
				autoIncrement: true,
			},
			name: {
				type: DataTypes.STRING(255),
				allowNull: false,
			},
			code: {
				type: DataTypes.STRING(255),
				allowNull: false,
			},
			isStandard: {
				type: DataTypes.BOOLEAN,
				allowNull: false,
			},
			file: {
				type: DataTypes.STRING(255),
			},
			packagingLevel: {
				type: DataTypes.ENUM(
					"PRIMARY_PACKAGING",
					"SECONDARY_PACKAGING",
					"MASTER_CARTON",
					"SHIPPING_CARTON",
					"OTHER",
				),
				allowNull: false,
			},
            remarks: {
				type: DataTypes.TEXT,
			},
		},
		{
			tableName: "label",
			timestamps: false,
		},
	);

	// This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
	Label.associate = (models) => {
    //     Label.belongsTo(models.supplier, {
		// 	foreignKey: "supplierId",
		// });

    Label.hasMany(models.registration);

    Label.belongsToMany(models.product, {
			through: "labelProductsProduct",
			foreignKey: "labelId",
			otherKey: "productId",
            as: "availableProducts"
		});

        // Label.hasMany(models.registration, {
		// 	as: "secondaryPackagingLabel",
        //     foreignKey: "secondaryPackagingLabelId"
        // });

        // Label.hasMany(models.registration, {
		// 	as: "masterCartonLabel",
        //     foreignKey: "masterCartonLabelId"
        // });

        // Label.hasMany(models.registration, {
		// 	as: "shippingCartonLabel",
        //     foreignKey: "shippingCartonLabelId"
        // });

        // Label.hasMany(models.registration, {
		// 	as: "label",
        //     foreignKey: "labelId"
        // });

        // Label.hasMany(models.registration, {
		// 	as: "reworkLabel",
        //     foreignKey: "reworkLabelId"
        // });
	};

	return Label;
};
